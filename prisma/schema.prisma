// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Item {
  id               Int           @id @default(autoincrement())
  name             String
  description      String
  owner            String
  ownerEmail       String
  subscriptionDate DateTime?
  purchaseDate     DateTime?
  expirationDate   DateTime?
  attachment       String
  itemType         ItemType
  lastReminder     DateTime?
  numberOfLicenses Int?
  requisitionNumber String?
  archived         Boolean       @default(false)
  createdAt        DateTime      @default(now())
  licenseKeys      LicenseKey[]  
  renewals         Renewal[]     
  vendorId         Int?          
  vendor           Vendor?       @relation(fields: [vendorId], references: [id])
}

model LicenseKey {
  id        Int      @id @default(autoincrement())
  key       String   @unique
  status    String   @default("active") 
  itemId    Int
  item      Item     @relation(fields: [itemId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Renewal {
  id        Int      @id @default(autoincrement())
  item      Item     @relation(fields: [itemId], references: [id])
  itemId    Int
  renewedAt DateTime @default(now())
}

model Vendor {
  id      Int    @id @default(autoincrement())
  name    String
  contact String
  email   String
  status  String @default("ACTIVE") 
  items   Item[] 
}

enum ItemType {
  SOFTWARE
  HARDWARE
}

model Token {
  id          Int      @id @default(autoincrement())  
  tokenValue  String   @unique 
  expiresAt   DateTime 
  revoked     Boolean  @default(false) 
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  @@index([tokenValue])
}
